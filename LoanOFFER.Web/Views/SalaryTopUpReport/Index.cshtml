@using PagedList
@using PagedList.Mvc

@model IPagedList<LoanOFFER.Data.BusinessLogic.SalaryTopUpViewModel>

@{
    ViewBag.Title = "Index";
    //Layout = "";
}

<!Doctype html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" />
    <style>
        h2 {
            color: #ffba18;
        }
        .cardClass {
            background-color: #5c3092;
            padding: 20px;
            border: 1px solid #ccb27f;
        }

        .textClass {
            color: #ccb27f;
        }
    </style>
</head>
<body>
    <h2 style="color: #ffba18">Salary Top-Up Fast Cash Loan Offer Report</h2>
    @*<div class="card cardClass">
        <p class="textClass">The information on Salary Top-Up Fast Cash would be provided, shortly. </p>
    </div>*@

    <br />
    <form class="form-inline">

        <div class="input-group date ">
            <input type="text" class="form-control datepicker" name="RequestDate" autocomplete="off">
            <div class="input-group-addon">
                <label>start date</label>
                @*<span class="glyphicon glyphicon-th"></span>*@
            </div>
        </div>

        <div class="input-group date">
            <input type="text" class="form-control datepicker" name="LogDate" autocomplete="off">
            <div class="input-group-addon">
                <label>end date</label>
                @*<span class="glyphicon glyphicon-th"></span>*@
            </div>
        </div>
        <div class="input-group">
            <input class="form-control mr-sm-2" type="search" name="SourcePhone" placeholder=" Phone Number Only" aria-label="Search">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </div>

        <div class="input-group">
            <input class="form-control mr-sm-2" type="text" name="customerName" placeholder="Customer Name" aria-label="Read-only">
            @*<button class="btn btn-outline-success my-2 my-sm-0" type="search">Customer </button>*@
        </div>

        @*<button type="submit" class="btn btnClass ">Generate</button>*@
        <div id="excelbtn" style="float:right" class="input-group">
            @Html.ActionLink("Export To Excel", "ExportToExcel", "SalaryTopUpReport", new { RequestDate = ViewBag.RequestDate, LogDate = ViewBag.LogDate, phoneNo = ViewBag.SourcePhone }, new { @class = "btn btnClass", RequestDate = ViewBag.RequestDate, LogDate = ViewBag.LogDate, phoneNo = ViewBag.SourcePhone })
        </div>

        <div id="pdfbtn" style="float:right" class="input-group">
            @Html.ActionLink("Export To Pdf", "ExportToPdf", "SalaryTopUpReport", new { startDate = ViewBag.RequestTime, endDate = ViewBag.LogDate, phoneNo = ViewBag.PhoneNo }, new { @class = "btn btnClass", startDate = ViewBag.RequestTime, endDate = ViewBag.LogDate, phoneNo = ViewBag.SourcePhone })
        </div>

        <br />
        <br />

        <table class="table table-striped table-bordered text-center" id="tblData">
            <thead style="background-color:  #5c3092; color: white">
                <tr>
                    @*<th>
                     @Html.DisplayNameFor(model => model.First().Id)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().SourcePhone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Channel)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().RequestType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().RequestDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Duration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().ResponseCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().ResponseDescr)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Remark)
                    </th>
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tbody>
                    <tr>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.SourcePhone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Channel)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequestType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequestDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Duration)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ResponseCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ResponseDescr)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remark)
                        </td>
                    </tr>
                </tbody>
            }

        </table>
    </form>
    <p>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, RequestDate = ViewBag.RequestDate, LogDate = ViewBag.LogDate, SourcePhone = ViewBag.SourcePhone }), PagedListRenderOptions.PageNumbersOnly)
    </p>
</body>
