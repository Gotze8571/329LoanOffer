@using PagedList
@using PagedList.Mvc

@model IPagedList<LoanOFFER.Data.BusinessLogic.SimbrellaViewModel>

@{
    /**/

    //ViewBag.Title = "Index";
    //Layout = "null";
}

<h2 style="color: #ffba18">Simbrella Loan Offer Report</h2>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    table {
        width: 100%;
    }

    /*table tr td {
            border: 1px solid black;
            text-align: center;
            word-wrap: break-word;
        }

        table tr:hover {
            background-color: #5c3092;
            color: #fff;
        }

        table tr th {
            border: 1px solid black;
            text-align: center;
            background-color: #fff;
            color: #000;
        }*/
</style>
<br />
<form class="form-inline">

    <div class="input-group date ">
        <input type="text" class="form-control datepicker" name="RequestTime" autocomplete="off">
        <div class="input-group-addon">
            <label>start date</label>
            @*<span class="glyphicon glyphicon-th"></span>*@
        </div>
    </div>

    <div class="input-group date">
        <input type="text" class="form-control datepicker" name="LogDate" autocomplete="off">
        <div class="input-group-addon">
            <label>end date</label>
            @*<span class="glyphicon glyphicon-th"></span>*@
        </div>
    </div>
    <div class="input-group">
        <input class="form-control mr-sm-2" type="search" name="customerId" placeholder="Customer ID Only" aria-label="Search">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </div>
    <div class="input-group">
        <input class="form-control mr-sm-2" type="text" name="customerName" placeholder="Customer Name" aria-label="Read-only">
        @*<button class="btn btn-outline-success my-2 my-sm-0" type="search">Customer </button>*@
    </div>

    @*<button type="submit" class="btn btnClass ">Generate</button>*@
    <div id="excelbtn" style="float:right" class="input-group">
        @Html.ActionLink("Export To Excel", "ExportToExcel", "SimbrellaReport", new { RequestTime = ViewBag.RequestTime, LogDate = ViewBag.LogDate, customerId = ViewBag.customerId }, new { @class = "btn btnClass", startDate = ViewBag.RequestTime, endDate = ViewBag.LogDate, customerId = ViewBag.customerId })
    </div>

    <div id="pdfbtn" style="float:right" class="input-group">
        @Html.ActionLink("Export To Pdf", "ExportToPdf", "SimbrellaReport", new { RequestTime = ViewBag.RequestTime, LogDate = ViewBag.LogDate, customerId = ViewBag.customerId }, new { @class = "btn btnClass", startDate = ViewBag.RequestTime, endDate = ViewBag.LogDate, customerId = ViewBag.customerId })
    </div>

    <br />
    <br />

    <table class="table table-striped table-bordered text-center" id="tblData">
        <thead style="background-color:  #5c3092; color: white">
            <tr>
                @*<th>
                        @Html.DisplayNameFor(model => model.First().Id)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.First().Request)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().customerId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().RequestTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Response)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().LogDate)
                </th>
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Request)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RequestTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Response)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LogDate)
                    </td>
                </tr>
            </tbody>
         }
    </table>
</form>
<p>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, RequestTime = ViewBag.RequestTime, LogDate = ViewBag.LogDate, customerId = ViewBag.CustId }), PagedListRenderOptions.PageNumbersOnly)
</p>
@*<div class="container body-content">

        <hr />
        <footer>
            <strong><p>&copy; @DateTime.Now.Year - FCMB</p></strong>
        </footer>
    </div>*@