@*@using PagedList
@using PagedList.Mvc*@

@model IEnumerable<LoanOFFER.Data.BusinessLogic.SimbrellaViewModel>

@{
    /**/

    ViewBag.Title = "ExportToPdfSimbrella";
    Layout = "";
}

<h2 style="color: #ffba18">Simbrella Loan Offer Report</h2>
<link href="~/Content/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
@*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@

<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    table {
        width: 100%;
    }
    .sim-wrapper{
        margin: 0;
        padding: 0;
        width: auto;
        height: auto;
    }

    /*table tr td {
            border: 1px solid black;
            text-align: center;
            word-wrap: break-word;
        }

        table tr:hover {
            background-color: #5c3092;
            color: #fff;
        }

        table tr th {
            border: 1px solid black;
            text-align: center;
            background-color: #fff;
            color: #000;
        }*/
</style>
<br />
<div class="sim-wrapper">
    <form class="form-inline">

        @*<div class="form-group date ">
            <input type="text" class="form-control datepicker" name="RequestTime" autocomplete="off">
            <div class="input-group-addon">
                <div>start date</div>
                
            </div>
        </div>

        <div class="form-group date">
            <input type="text" class="form-control datepicker" name="LogDate" autocomplete="off">
            <div class="input-group-addon">
                <div>end date</div>
               
            </div>
        </div>
        <div class="form-group">
            <input class="form-control mr-sm-2" type="search" name="customerId" placeholder="Customer ID Only" aria-label="Search">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </div>
        <div class="form-group">
            <input class="form-control mr-sm-2" type="text" name="customerName" placeholder="Customer Name" aria-label="Read-only">
            
        </div>

        <div id="excelbtn" style="float:right" class="form-group">
            @Html.ActionLink("Export To Excel", "ExportToExcel", "SimbrellaReport", new { startDate = ViewBag.startDate, endDate = ViewBag.endDate, customerId = ViewBag.CustId }, new { @class = "btn btnClass", startDate = ViewBag.startDate, endDate = ViewBag.endDate, customerId = ViewBag.CustId })
        </div>

        <div id="pdfbtn" style="float:right" class="form-group">
            @Html.ActionLink("Export To Pdf", "PrintViewToPdf", "SimbrellaReport", new { RequestTime = ViewBag.RequestTime, LogDate = ViewBag.LogDate, customerId = ViewBag.CustId }, new { @class = "btn btnClass", startDate = ViewBag.RequestTime, endDate = ViewBag.LogDate, customerId = ViewBag.CustId })
        </div>*@

        <br />
        <br />

        <table class="table table-striped table-bordered text-center" id="tblData">
            <thead style="background-color: #5c3092; color: white">
                <tr>

                    @*<th>
                            @Html.DisplayNameFor(model => model.First().Request)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().customerId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().RequestTime)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().Response)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().LogDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().LoanType)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.First().BrokerCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().BranchSolID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().BranchSBU)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().SimbrellaLoan.type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().SimbrellaLoan.transactionId)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.First().SimbrellaLoan.customerId)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.First().SimbrellaLoan.accountId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().SimbrellaLoan.msisdn)
                    @*</th>
                    <th>
                            @Html.DisplayNameFor(model => model.First().SimbrellaLoan.AppId)
                        </th>*@
                    @*<th>
                            @Html.DisplayNameFor(model => model.First().SimbrellaLoan.AppKey)
                        </th>*@
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tbody>
                    <tr>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Id)
                             </td>*@
                        @*<td>
                                @Html.DisplayFor(modelItem => item.Request)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.customerId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequestTime)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Response)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.LogDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LoanType)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.BrokerCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BranchSolID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BranchSBU)
                        </td>*@
                        <td>
                                @Html.DisplayFor(modelItem => item.SimbrellaLoan.type)
                            </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SimbrellaLoan.transactionId)
                        </td>

                        @*<td>
                                @Html.DisplayFor(modelItem => item.SimbrellaLoan.customerId)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.SimbrellaLoan.accountId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SimbrellaLoan.msisdn)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.SimbrellaLoan.AppId)
                            </td>*@
                        @*<td>
                                @Html.DisplayFor(modelItem => item.SimbrellaLoan.AppKey)
                            </td>*@
                    </tr>
                </tbody>
            }
        </table>
    </form>
    @*<p>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, RequestTime = ViewBag.startDate, LogDate = ViewBag.endDate, CustId = ViewBag.CustId }), PagedListRenderOptions.PageNumbersOnly)
    </p>*@
</div>

@*<div class="container body-content">

        <hr />
        <footer>
            <strong><p>&copy; @DateTime.Now.Year - FCMB</p></strong>
        </footer>
    </div>*@